---
import type {
	InferGetStaticParamsType,
	InferGetStaticPropsType,
	GetStaticPaths,
} from "astro";
import BaseLayout from "../../layouts/BaseLayout.astro";
import BlogPost from "../../components/BlogPost.astro";

export const getStaticPaths = (async () => {
	const allPosts = await Astro.glob("../posts/*.mdx");
	const uniqueTags = [
		...new Set(allPosts.map((post) => post.frontmatter.tags).flat()),
	];

	const mapUniqueTag = (tag: string) => {
		const filteredPosts = allPosts.filter((post) =>
			post.frontmatter.tags.includes(tag)
		);
		return {
			params: { tag },
			props: { posts: filteredPosts },
		};
	};
	return uniqueTags.map(mapUniqueTag);
}) satisfies GetStaticPaths;

type Params = InferGetStaticParamsType<typeof getStaticPaths>;
type MyProps = InferGetStaticPropsType<typeof getStaticPaths>;
const { tag } = Astro.params as Params;
const { posts } = Astro.props as MyProps;
---

<BaseLayout pageTitle={tag}>
	<div class="m-4">
		<ul>
			{
				// posts.map((post) => (
				// <BlogPost url={post.url} title={post.frontmatter.title} />
				// ))
			}
		</ul>
	</div>
</BaseLayout>
